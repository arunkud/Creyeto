//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ecom.presentation.website.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<Appointment> Appointments { get; set; }
        public virtual DbSet<Appointment_status> Appointment_status { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<CityLocation> CityLocations { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<DepartmentReview> DepartmentReviews { get; set; }
        public virtual DbSet<DepartmentUserLike> DepartmentUserLikes { get; set; }
        public virtual DbSet<DeseaseSpecialization> DeseaseSpecializations { get; set; }
        public virtual DbSet<Disease> Diseases { get; set; }
        public virtual DbSet<Doctor> Doctors { get; set; }
        public virtual DbSet<DoctorReview> DoctorReviews { get; set; }
        public virtual DbSet<DoctorSchedule> DoctorSchedules { get; set; }
        public virtual DbSet<DoctorUserLike> DoctorUserLikes { get; set; }
        public virtual DbSet<Hospital> Hospitals { get; set; }
        public virtual DbSet<HospitalInsurance> HospitalInsurances { get; set; }
        public virtual DbSet<HospitalReview> HospitalReviews { get; set; }
        public virtual DbSet<HospitalSchedule> HospitalSchedules { get; set; }
        public virtual DbSet<HospitalUserLike> HospitalUserLikes { get; set; }
        public virtual DbSet<Insurance> Insurances { get; set; }
        public virtual DbSet<Qualification> Qualifications { get; set; }
        public virtual DbSet<Specialization> Specializations { get; set; }
        public virtual DbSet<HospitalAdmin> HospitalAdmins { get; set; }
        public virtual DbSet<DoctorView> DoctorViews { get; set; }
    
        public virtual int AddDepartmentReview(string userID, Nullable<int> departmentId, string reviewText, Nullable<int> rating, Nullable<bool> like)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            var reviewTextParameter = reviewText != null ?
                new ObjectParameter("ReviewText", reviewText) :
                new ObjectParameter("ReviewText", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            var likeParameter = like.HasValue ?
                new ObjectParameter("Like", like) :
                new ObjectParameter("Like", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddDepartmentReview", userIDParameter, departmentIdParameter, reviewTextParameter, ratingParameter, likeParameter);
        }
    
        public virtual int AddDoctorReview(string userID, Nullable<int> doctorId, string reviewText, Nullable<int> rating, Nullable<bool> like)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var doctorIdParameter = doctorId.HasValue ?
                new ObjectParameter("DoctorId", doctorId) :
                new ObjectParameter("DoctorId", typeof(int));
    
            var reviewTextParameter = reviewText != null ?
                new ObjectParameter("ReviewText", reviewText) :
                new ObjectParameter("ReviewText", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            var likeParameter = like.HasValue ?
                new ObjectParameter("Like", like) :
                new ObjectParameter("Like", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddDoctorReview", userIDParameter, doctorIdParameter, reviewTextParameter, ratingParameter, likeParameter);
        }
    
        public virtual int AddHospitalReview(string userID, Nullable<int> hospitalId, string reviewText, Nullable<int> rating, Nullable<bool> like)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var hospitalIdParameter = hospitalId.HasValue ?
                new ObjectParameter("HospitalId", hospitalId) :
                new ObjectParameter("HospitalId", typeof(int));
    
            var reviewTextParameter = reviewText != null ?
                new ObjectParameter("ReviewText", reviewText) :
                new ObjectParameter("ReviewText", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            var likeParameter = like.HasValue ?
                new ObjectParameter("Like", like) :
                new ObjectParameter("Like", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddHospitalReview", userIDParameter, hospitalIdParameter, reviewTextParameter, ratingParameter, likeParameter);
        }
    
        public virtual int AddNewDoctor(string nameEN, string qualification, Nullable<decimal> fee, Nullable<int> specialityID, Nullable<bool> hasImage, Nullable<bool> isActive, Nullable<System.DateTime> experienceFrom, Nullable<int> hospitalID, Nullable<System.TimeSpan> duration, Nullable<System.TimeSpan> sundayMorningStartTime, Nullable<System.TimeSpan> sundayMorningEndTime, Nullable<System.TimeSpan> sundayAfernoonStartTime, Nullable<System.TimeSpan> sundayAfernoonEndTime, Nullable<System.TimeSpan> sundayEveningStartTime, Nullable<System.TimeSpan> sundayEveningEndTime, Nullable<System.TimeSpan> mondayMorningStartTime, Nullable<System.TimeSpan> mondayMorningEndTime, Nullable<System.TimeSpan> mondayAfernoonStartTime, Nullable<System.TimeSpan> mondayAfernoonEndTime, Nullable<System.TimeSpan> mondayEveningStartTime, Nullable<System.TimeSpan> mondayEveningEndTime, Nullable<System.TimeSpan> tuesdayMorningStartTime, Nullable<System.TimeSpan> tuesdayMorningEndTime, Nullable<System.TimeSpan> tuesdayAfernoonStartTime, Nullable<System.TimeSpan> tuesdayAfernoonEndTime, Nullable<System.TimeSpan> tuesdayEveningStartTime, Nullable<System.TimeSpan> tuesdayEveningEndTime, Nullable<System.TimeSpan> wednesdayMorningStartTime, Nullable<System.TimeSpan> wednesdayMorningEndTime, Nullable<System.TimeSpan> wednesdayAfernoonStartTime, Nullable<System.TimeSpan> wednesdayAfernoonEndTime, Nullable<System.TimeSpan> wednesdayEveningStartTime, Nullable<System.TimeSpan> wednesdayEveningEndTime, Nullable<System.TimeSpan> thursdayMorningStartTime, Nullable<System.TimeSpan> thursdayMorningEndTime, Nullable<System.TimeSpan> thursdayAfernoonStartTime, Nullable<System.TimeSpan> thursdayAfernoonEndTime, Nullable<System.TimeSpan> thursdayEveningStartTime, Nullable<System.TimeSpan> thursdayEveningEndTime, Nullable<System.TimeSpan> fridayMorningStartTime, Nullable<System.TimeSpan> fridayMorningEndTime, Nullable<System.TimeSpan> fridayAfernoonStartTime, Nullable<System.TimeSpan> fridayAfernoonEndTime, Nullable<System.TimeSpan> fridayEveningStartTime, Nullable<System.TimeSpan> fridayEveningEndTime, Nullable<System.TimeSpan> saturdayMorningStartTime, Nullable<System.TimeSpan> saturdayMorningEndTime, Nullable<System.TimeSpan> saturdayAfernoonStartTime, Nullable<System.TimeSpan> saturdayAfernoonEndTime, Nullable<System.TimeSpan> saturdayEveningStartTime, Nullable<System.TimeSpan> saturdayEveningEndTime)
        {
            var nameENParameter = nameEN != null ?
                new ObjectParameter("NameEN", nameEN) :
                new ObjectParameter("NameEN", typeof(string));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("Qualification", qualification) :
                new ObjectParameter("Qualification", typeof(string));
    
            var feeParameter = fee.HasValue ?
                new ObjectParameter("Fee", fee) :
                new ObjectParameter("Fee", typeof(decimal));
    
            var specialityIDParameter = specialityID.HasValue ?
                new ObjectParameter("SpecialityID", specialityID) :
                new ObjectParameter("SpecialityID", typeof(int));
    
            var hasImageParameter = hasImage.HasValue ?
                new ObjectParameter("HasImage", hasImage) :
                new ObjectParameter("HasImage", typeof(bool));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var experienceFromParameter = experienceFrom.HasValue ?
                new ObjectParameter("ExperienceFrom", experienceFrom) :
                new ObjectParameter("ExperienceFrom", typeof(System.DateTime));
    
            var hospitalIDParameter = hospitalID.HasValue ?
                new ObjectParameter("HospitalID", hospitalID) :
                new ObjectParameter("HospitalID", typeof(int));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(System.TimeSpan));
    
            var sundayMorningStartTimeParameter = sundayMorningStartTime.HasValue ?
                new ObjectParameter("SundayMorningStartTime", sundayMorningStartTime) :
                new ObjectParameter("SundayMorningStartTime", typeof(System.TimeSpan));
    
            var sundayMorningEndTimeParameter = sundayMorningEndTime.HasValue ?
                new ObjectParameter("SundayMorningEndTime", sundayMorningEndTime) :
                new ObjectParameter("SundayMorningEndTime", typeof(System.TimeSpan));
    
            var sundayAfernoonStartTimeParameter = sundayAfernoonStartTime.HasValue ?
                new ObjectParameter("SundayAfernoonStartTime", sundayAfernoonStartTime) :
                new ObjectParameter("SundayAfernoonStartTime", typeof(System.TimeSpan));
    
            var sundayAfernoonEndTimeParameter = sundayAfernoonEndTime.HasValue ?
                new ObjectParameter("SundayAfernoonEndTime", sundayAfernoonEndTime) :
                new ObjectParameter("SundayAfernoonEndTime", typeof(System.TimeSpan));
    
            var sundayEveningStartTimeParameter = sundayEveningStartTime.HasValue ?
                new ObjectParameter("SundayEveningStartTime", sundayEveningStartTime) :
                new ObjectParameter("SundayEveningStartTime", typeof(System.TimeSpan));
    
            var sundayEveningEndTimeParameter = sundayEveningEndTime.HasValue ?
                new ObjectParameter("SundayEveningEndTime", sundayEveningEndTime) :
                new ObjectParameter("SundayEveningEndTime", typeof(System.TimeSpan));
    
            var mondayMorningStartTimeParameter = mondayMorningStartTime.HasValue ?
                new ObjectParameter("MondayMorningStartTime", mondayMorningStartTime) :
                new ObjectParameter("MondayMorningStartTime", typeof(System.TimeSpan));
    
            var mondayMorningEndTimeParameter = mondayMorningEndTime.HasValue ?
                new ObjectParameter("MondayMorningEndTime", mondayMorningEndTime) :
                new ObjectParameter("MondayMorningEndTime", typeof(System.TimeSpan));
    
            var mondayAfernoonStartTimeParameter = mondayAfernoonStartTime.HasValue ?
                new ObjectParameter("MondayAfernoonStartTime", mondayAfernoonStartTime) :
                new ObjectParameter("MondayAfernoonStartTime", typeof(System.TimeSpan));
    
            var mondayAfernoonEndTimeParameter = mondayAfernoonEndTime.HasValue ?
                new ObjectParameter("MondayAfernoonEndTime", mondayAfernoonEndTime) :
                new ObjectParameter("MondayAfernoonEndTime", typeof(System.TimeSpan));
    
            var mondayEveningStartTimeParameter = mondayEveningStartTime.HasValue ?
                new ObjectParameter("MondayEveningStartTime", mondayEveningStartTime) :
                new ObjectParameter("MondayEveningStartTime", typeof(System.TimeSpan));
    
            var mondayEveningEndTimeParameter = mondayEveningEndTime.HasValue ?
                new ObjectParameter("MondayEveningEndTime", mondayEveningEndTime) :
                new ObjectParameter("MondayEveningEndTime", typeof(System.TimeSpan));
    
            var tuesdayMorningStartTimeParameter = tuesdayMorningStartTime.HasValue ?
                new ObjectParameter("TuesdayMorningStartTime", tuesdayMorningStartTime) :
                new ObjectParameter("TuesdayMorningStartTime", typeof(System.TimeSpan));
    
            var tuesdayMorningEndTimeParameter = tuesdayMorningEndTime.HasValue ?
                new ObjectParameter("TuesdayMorningEndTime", tuesdayMorningEndTime) :
                new ObjectParameter("TuesdayMorningEndTime", typeof(System.TimeSpan));
    
            var tuesdayAfernoonStartTimeParameter = tuesdayAfernoonStartTime.HasValue ?
                new ObjectParameter("TuesdayAfernoonStartTime", tuesdayAfernoonStartTime) :
                new ObjectParameter("TuesdayAfernoonStartTime", typeof(System.TimeSpan));
    
            var tuesdayAfernoonEndTimeParameter = tuesdayAfernoonEndTime.HasValue ?
                new ObjectParameter("TuesdayAfernoonEndTime", tuesdayAfernoonEndTime) :
                new ObjectParameter("TuesdayAfernoonEndTime", typeof(System.TimeSpan));
    
            var tuesdayEveningStartTimeParameter = tuesdayEveningStartTime.HasValue ?
                new ObjectParameter("TuesdayEveningStartTime", tuesdayEveningStartTime) :
                new ObjectParameter("TuesdayEveningStartTime", typeof(System.TimeSpan));
    
            var tuesdayEveningEndTimeParameter = tuesdayEveningEndTime.HasValue ?
                new ObjectParameter("TuesdayEveningEndTime", tuesdayEveningEndTime) :
                new ObjectParameter("TuesdayEveningEndTime", typeof(System.TimeSpan));
    
            var wednesdayMorningStartTimeParameter = wednesdayMorningStartTime.HasValue ?
                new ObjectParameter("WednesdayMorningStartTime", wednesdayMorningStartTime) :
                new ObjectParameter("WednesdayMorningStartTime", typeof(System.TimeSpan));
    
            var wednesdayMorningEndTimeParameter = wednesdayMorningEndTime.HasValue ?
                new ObjectParameter("WednesdayMorningEndTime", wednesdayMorningEndTime) :
                new ObjectParameter("WednesdayMorningEndTime", typeof(System.TimeSpan));
    
            var wednesdayAfernoonStartTimeParameter = wednesdayAfernoonStartTime.HasValue ?
                new ObjectParameter("WednesdayAfernoonStartTime", wednesdayAfernoonStartTime) :
                new ObjectParameter("WednesdayAfernoonStartTime", typeof(System.TimeSpan));
    
            var wednesdayAfernoonEndTimeParameter = wednesdayAfernoonEndTime.HasValue ?
                new ObjectParameter("WednesdayAfernoonEndTime", wednesdayAfernoonEndTime) :
                new ObjectParameter("WednesdayAfernoonEndTime", typeof(System.TimeSpan));
    
            var wednesdayEveningStartTimeParameter = wednesdayEveningStartTime.HasValue ?
                new ObjectParameter("WednesdayEveningStartTime", wednesdayEveningStartTime) :
                new ObjectParameter("WednesdayEveningStartTime", typeof(System.TimeSpan));
    
            var wednesdayEveningEndTimeParameter = wednesdayEveningEndTime.HasValue ?
                new ObjectParameter("WednesdayEveningEndTime", wednesdayEveningEndTime) :
                new ObjectParameter("WednesdayEveningEndTime", typeof(System.TimeSpan));
    
            var thursdayMorningStartTimeParameter = thursdayMorningStartTime.HasValue ?
                new ObjectParameter("ThursdayMorningStartTime", thursdayMorningStartTime) :
                new ObjectParameter("ThursdayMorningStartTime", typeof(System.TimeSpan));
    
            var thursdayMorningEndTimeParameter = thursdayMorningEndTime.HasValue ?
                new ObjectParameter("ThursdayMorningEndTime", thursdayMorningEndTime) :
                new ObjectParameter("ThursdayMorningEndTime", typeof(System.TimeSpan));
    
            var thursdayAfernoonStartTimeParameter = thursdayAfernoonStartTime.HasValue ?
                new ObjectParameter("ThursdayAfernoonStartTime", thursdayAfernoonStartTime) :
                new ObjectParameter("ThursdayAfernoonStartTime", typeof(System.TimeSpan));
    
            var thursdayAfernoonEndTimeParameter = thursdayAfernoonEndTime.HasValue ?
                new ObjectParameter("ThursdayAfernoonEndTime", thursdayAfernoonEndTime) :
                new ObjectParameter("ThursdayAfernoonEndTime", typeof(System.TimeSpan));
    
            var thursdayEveningStartTimeParameter = thursdayEveningStartTime.HasValue ?
                new ObjectParameter("ThursdayEveningStartTime", thursdayEveningStartTime) :
                new ObjectParameter("ThursdayEveningStartTime", typeof(System.TimeSpan));
    
            var thursdayEveningEndTimeParameter = thursdayEveningEndTime.HasValue ?
                new ObjectParameter("ThursdayEveningEndTime", thursdayEveningEndTime) :
                new ObjectParameter("ThursdayEveningEndTime", typeof(System.TimeSpan));
    
            var fridayMorningStartTimeParameter = fridayMorningStartTime.HasValue ?
                new ObjectParameter("FridayMorningStartTime", fridayMorningStartTime) :
                new ObjectParameter("FridayMorningStartTime", typeof(System.TimeSpan));
    
            var fridayMorningEndTimeParameter = fridayMorningEndTime.HasValue ?
                new ObjectParameter("FridayMorningEndTime", fridayMorningEndTime) :
                new ObjectParameter("FridayMorningEndTime", typeof(System.TimeSpan));
    
            var fridayAfernoonStartTimeParameter = fridayAfernoonStartTime.HasValue ?
                new ObjectParameter("FridayAfernoonStartTime", fridayAfernoonStartTime) :
                new ObjectParameter("FridayAfernoonStartTime", typeof(System.TimeSpan));
    
            var fridayAfernoonEndTimeParameter = fridayAfernoonEndTime.HasValue ?
                new ObjectParameter("FridayAfernoonEndTime", fridayAfernoonEndTime) :
                new ObjectParameter("FridayAfernoonEndTime", typeof(System.TimeSpan));
    
            var fridayEveningStartTimeParameter = fridayEveningStartTime.HasValue ?
                new ObjectParameter("FridayEveningStartTime", fridayEveningStartTime) :
                new ObjectParameter("FridayEveningStartTime", typeof(System.TimeSpan));
    
            var fridayEveningEndTimeParameter = fridayEveningEndTime.HasValue ?
                new ObjectParameter("FridayEveningEndTime", fridayEveningEndTime) :
                new ObjectParameter("FridayEveningEndTime", typeof(System.TimeSpan));
    
            var saturdayMorningStartTimeParameter = saturdayMorningStartTime.HasValue ?
                new ObjectParameter("SaturdayMorningStartTime", saturdayMorningStartTime) :
                new ObjectParameter("SaturdayMorningStartTime", typeof(System.TimeSpan));
    
            var saturdayMorningEndTimeParameter = saturdayMorningEndTime.HasValue ?
                new ObjectParameter("SaturdayMorningEndTime", saturdayMorningEndTime) :
                new ObjectParameter("SaturdayMorningEndTime", typeof(System.TimeSpan));
    
            var saturdayAfernoonStartTimeParameter = saturdayAfernoonStartTime.HasValue ?
                new ObjectParameter("SaturdayAfernoonStartTime", saturdayAfernoonStartTime) :
                new ObjectParameter("SaturdayAfernoonStartTime", typeof(System.TimeSpan));
    
            var saturdayAfernoonEndTimeParameter = saturdayAfernoonEndTime.HasValue ?
                new ObjectParameter("SaturdayAfernoonEndTime", saturdayAfernoonEndTime) :
                new ObjectParameter("SaturdayAfernoonEndTime", typeof(System.TimeSpan));
    
            var saturdayEveningStartTimeParameter = saturdayEveningStartTime.HasValue ?
                new ObjectParameter("SaturdayEveningStartTime", saturdayEveningStartTime) :
                new ObjectParameter("SaturdayEveningStartTime", typeof(System.TimeSpan));
    
            var saturdayEveningEndTimeParameter = saturdayEveningEndTime.HasValue ?
                new ObjectParameter("SaturdayEveningEndTime", saturdayEveningEndTime) :
                new ObjectParameter("SaturdayEveningEndTime", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddNewDoctor", nameENParameter, qualificationParameter, feeParameter, specialityIDParameter, hasImageParameter, isActiveParameter, experienceFromParameter, hospitalIDParameter, durationParameter, sundayMorningStartTimeParameter, sundayMorningEndTimeParameter, sundayAfernoonStartTimeParameter, sundayAfernoonEndTimeParameter, sundayEveningStartTimeParameter, sundayEveningEndTimeParameter, mondayMorningStartTimeParameter, mondayMorningEndTimeParameter, mondayAfernoonStartTimeParameter, mondayAfernoonEndTimeParameter, mondayEveningStartTimeParameter, mondayEveningEndTimeParameter, tuesdayMorningStartTimeParameter, tuesdayMorningEndTimeParameter, tuesdayAfernoonStartTimeParameter, tuesdayAfernoonEndTimeParameter, tuesdayEveningStartTimeParameter, tuesdayEveningEndTimeParameter, wednesdayMorningStartTimeParameter, wednesdayMorningEndTimeParameter, wednesdayAfernoonStartTimeParameter, wednesdayAfernoonEndTimeParameter, wednesdayEveningStartTimeParameter, wednesdayEveningEndTimeParameter, thursdayMorningStartTimeParameter, thursdayMorningEndTimeParameter, thursdayAfernoonStartTimeParameter, thursdayAfernoonEndTimeParameter, thursdayEveningStartTimeParameter, thursdayEveningEndTimeParameter, fridayMorningStartTimeParameter, fridayMorningEndTimeParameter, fridayAfernoonStartTimeParameter, fridayAfernoonEndTimeParameter, fridayEveningStartTimeParameter, fridayEveningEndTimeParameter, saturdayMorningStartTimeParameter, saturdayMorningEndTimeParameter, saturdayAfernoonStartTimeParameter, saturdayAfernoonEndTimeParameter, saturdayEveningStartTimeParameter, saturdayEveningEndTimeParameter);
        }
    
        public virtual ObjectResult<GetAllDoctors_Result> GetAllDoctors(Nullable<int> specialityID, Nullable<double> latitude, Nullable<double> longitude)
        {
            var specialityIDParameter = specialityID.HasValue ?
                new ObjectParameter("SpecialityID", specialityID) :
                new ObjectParameter("SpecialityID", typeof(int));
    
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(double));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllDoctors_Result>("GetAllDoctors", specialityIDParameter, latitudeParameter, longitudeParameter);
        }
    
        public virtual ObjectResult<GetAllDoctorsByCity_Result> GetAllDoctorsByCity(Nullable<int> specialityID, Nullable<int> cityID)
        {
            var specialityIDParameter = specialityID.HasValue ?
                new ObjectParameter("SpecialityID", specialityID) :
                new ObjectParameter("SpecialityID", typeof(int));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllDoctorsByCity_Result>("GetAllDoctorsByCity", specialityIDParameter, cityIDParameter);
        }
    
        public virtual int UpdateDoctorSchedule(Nullable<int> doctorID, string dayInWeek, Nullable<System.TimeSpan> duration, Nullable<System.TimeSpan> morningStartTime, Nullable<System.TimeSpan> morningEndTime, Nullable<System.TimeSpan> afernoonStartTime, Nullable<System.TimeSpan> afernoonEndTime, Nullable<System.TimeSpan> eveningStartTime, Nullable<System.TimeSpan> eveningEndTime)
        {
            var doctorIDParameter = doctorID.HasValue ?
                new ObjectParameter("DoctorID", doctorID) :
                new ObjectParameter("DoctorID", typeof(int));
    
            var dayInWeekParameter = dayInWeek != null ?
                new ObjectParameter("DayInWeek", dayInWeek) :
                new ObjectParameter("DayInWeek", typeof(string));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(System.TimeSpan));
    
            var morningStartTimeParameter = morningStartTime.HasValue ?
                new ObjectParameter("MorningStartTime", morningStartTime) :
                new ObjectParameter("MorningStartTime", typeof(System.TimeSpan));
    
            var morningEndTimeParameter = morningEndTime.HasValue ?
                new ObjectParameter("MorningEndTime", morningEndTime) :
                new ObjectParameter("MorningEndTime", typeof(System.TimeSpan));
    
            var afernoonStartTimeParameter = afernoonStartTime.HasValue ?
                new ObjectParameter("AfernoonStartTime", afernoonStartTime) :
                new ObjectParameter("AfernoonStartTime", typeof(System.TimeSpan));
    
            var afernoonEndTimeParameter = afernoonEndTime.HasValue ?
                new ObjectParameter("AfernoonEndTime", afernoonEndTime) :
                new ObjectParameter("AfernoonEndTime", typeof(System.TimeSpan));
    
            var eveningStartTimeParameter = eveningStartTime.HasValue ?
                new ObjectParameter("EveningStartTime", eveningStartTime) :
                new ObjectParameter("EveningStartTime", typeof(System.TimeSpan));
    
            var eveningEndTimeParameter = eveningEndTime.HasValue ?
                new ObjectParameter("EveningEndTime", eveningEndTime) :
                new ObjectParameter("EveningEndTime", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDoctorSchedule", doctorIDParameter, dayInWeekParameter, durationParameter, morningStartTimeParameter, morningEndTimeParameter, afernoonStartTimeParameter, afernoonEndTimeParameter, eveningStartTimeParameter, eveningEndTimeParameter);
        }
    }
}
